// Textos rom√°nticos para cada imagen del cuento
const textos = [
    "Yo quiero que seas como Cenicienta, mi princesa de los cuentos de hadas",
    "Ser aquel que ponga en tu pie, la zapatilla de cristal del amor eterno",
    "Como un cuento de hadas, te quiero contar todo lo que siento por ti",
    "Esa mirada dulce y m√°gica a m√≠ me congela el coraz√≥n de amor",
    "Quisiera ser el genio que concede todos tus deseos y sue√±os",
    "Yo quiero que t√∫ seas mi princesa, que t√∫ seas la bella y yo la bestia que se transforma con tu amor",
    "Y solo con tus besos me iluminas y me llenas de felicidad infinita",
    "Y que despiertes de tus sue√±os solo con mis besos de amor verdadero",
    "¬øQuieres saber qu√© pas√≥ recorriendo otros reinos? Todo lo hice por ti, mi amor"
];

// Elementos del DOM
const descripcion = document.getElementById('descripcion-text');
const descripcion_a = document.getElementById('descripcion-text-a');
const ourSpace = document.getElementById('our_space');

// Variables globales para los audios
let audioCuento = null;
let audioPienso = null;
let btnCuento = null;
let btnPienso = null;

// Funci√≥n para actualizar los indicadores del carrusel
function updateCarouselIndicators(activeIndex) {
    const indicators = document.querySelectorAll('.carousel-indicators button');
    indicators.forEach((indicator, index) => {
        if (index === activeIndex) {
            indicator.classList.add('active');
        } else {
            indicator.classList.remove('active');
        }
    });
}

// Funci√≥n para detener todos los audios
function stopAllAudios() {
    if (audioCuento && !audioCuento.paused) {
        audioCuento.pause();
        audioCuento.currentTime = 0;
        btnCuento.innerHTML = '‚ñ∂Ô∏è Cu√©ntame la Historia';
        btnCuento.style.background = 'linear-gradient(45deg, #DC2626, #B91C1C)';
    }
    
    if (audioPienso && !audioPienso.paused) {
        audioPienso.pause();
        audioPienso.currentTime = 0;
        btnPienso.innerHTML = 'üíù ¬øQu√© Significas para M√≠?';
        btnPienso.style.background = 'linear-gradient(45deg, #3B82F6, #1D4ED8)';
    }
}

// Funci√≥n para cambiar el texto de acuerdo a la imagen activa
document.getElementById('carouselExampleAutoplaying').addEventListener('slide.bs.carousel', function (event) {
    // Obtener el √≠ndice de la imagen activa
    let index = event.to;
    
    // Aseg√∫rate de que el √≠ndice est√© dentro del rango correcto
    if (index >= textos.length) {
        index = 0;
    }

    // Actualizar los indicadores del carrusel
    updateCarouselIndicators(index);

    // Cambiar el texto seg√∫n el √≠ndice de la imagen con efecto de transici√≥n
    descripcion.style.opacity = '0';
    descripcion.style.transform = 'translateY(-10px)';
    
    setTimeout(() => {
        descripcion.textContent = textos[index];
        descripcion.style.opacity = '1';
        descripcion.style.transform = 'translateY(0)';
    }, 300);

    // Verificar si ya hemos insertado el contenido en #our_space, para evitar duplicados
    if (index === textos.length - 1) {
        // Cambiar el texto del p√°rrafo por el nuevo contenido con estilo de enlace
        descripcion_a.innerHTML = `
            <div style="background: linear-gradient(135deg, rgba(30, 58, 138, 0.1), rgba(59, 130, 246, 0.1)); 
                        padding: 20px; border-radius: 15px; border-left: 4px solid var(--accent-color);">
                <p style="font-family: 'Dancing Script', cursive; font-size: 1.4rem; color: var(--primary-color); 
                          text-align: center; margin-bottom: 15px;">
                    ¬°Descubre mis aventuras por el mundo!
                </p>
                <a href="pages/vida.html" class="nav-link" style="display: inline-block; margin: 0;">
                    üåç Ver Mis Viajes por Ti
                </a>
            </div>
        `;
    } else {
        // Volver al texto original si no estamos en el √∫ltimo texto
        descripcion_a.innerHTML = `
            <p style="font-family: 'Dancing Script', cursive; font-size: 1.4rem; color: var(--secondary-color); 
                      text-align: center; margin: 0;">
                L√©eme hasta el final para descubrir m√°s...
            </p>
        `;
    }
});

// Evento para cuando el carrusel termine de cambiar
document.getElementById('carouselExampleAutoplaying').addEventListener('slid.bs.carousel', function (event) {
    // Obtener el √≠ndice de la imagen activa despu√©s del cambio
    let index = event.to;
    
    // Asegurarse de que los indicadores est√©n sincronizados
    updateCarouselIndicators(index);
});

// Funci√≥n para reproducir el audio del cuento
document.addEventListener('DOMContentLoaded', function () {
    btnCuento = document.getElementById('btnPlayAudio');
    audioCuento = document.getElementById('audio-cuento');

    btnCuento.addEventListener('click', function () {
        if (audioCuento.paused) {
            // Detener el otro audio antes de reproducir este
            stopAllAudios();
            
            audioCuento.play()
                .then(() => {
                    btnCuento.innerHTML = '‚è∏Ô∏è Pausar Historia';
                    btnCuento.style.background = 'linear-gradient(45deg, #B91C1C, #991B1B)';
                    // A√±adir efecto visual
                    btnCuento.style.transform = 'scale(1.05)';
                    setTimeout(() => {
                        btnCuento.style.transform = 'scale(1)';
                    }, 200);
                })
                .catch(error => {
                    console.error('No se pudo reproducir el audio:', error);
                    btnCuento.innerHTML = '‚ùå Error de Audio';
                });
        } else {
            audioCuento.pause();
            btnCuento.innerHTML = '‚ñ∂Ô∏è Cu√©ntame la Historia';
            btnCuento.style.background = 'linear-gradient(45deg, #DC2626, #B91C1C)';
        }
    });

    // Evento para cuando el audio termine
    audioCuento.addEventListener('ended', function() {
        btnCuento.innerHTML = 'üîÑ Repetir Historia';
        btnCuento.style.background = 'linear-gradient(45deg, #059669, #047857)';
    });
});

// Funci√≥n para reproducir el audio de "qu√© significas para m√≠"
document.addEventListener('DOMContentLoaded', function () {
    btnPienso = document.getElementById('btnPlayAudio2');
    audioPienso = document.getElementById('audio-pienso');

    btnPienso.addEventListener('click', function () {
        if (audioPienso.paused) {
            // Detener el otro audio antes de reproducir este
            stopAllAudios();
            
            audioPienso.play()
                .then(() => {
                    btnPienso.innerHTML = '‚è∏Ô∏è Pausar Significado';
                    btnPienso.style.background = 'linear-gradient(45deg, #1D4ED8, #1E40AF)';
                    // A√±adir efecto visual
                    btnPienso.style.transform = 'scale(1.05)';
                    setTimeout(() => {
                        btnPienso.style.transform = 'scale(1)';
                    }, 200);
                })
                .catch(error => {
                    console.error('No se pudo reproducir el audio:', error);
                    btnPienso.innerHTML = '‚ùå Error de Audio';
                });
        } else {
            audioPienso.pause();
            btnPienso.innerHTML = 'üíù ¬øQu√© Significas para M√≠?';
            btnPienso.style.background = 'linear-gradient(45deg, #3B82F6, #1D4ED8)';
        }
    });

    // Evento para cuando el audio termine
    audioPienso.addEventListener('ended', function() {
        btnPienso.innerHTML = 'üîÑ Repetir Significado';
        btnPienso.style.background = 'linear-gradient(45deg, #059669, #047857)';
    });
});

// Funci√≥n para a√±adir efectos visuales al carrusel
document.addEventListener('DOMContentLoaded', function() {
    const carousel = document.getElementById('carouselExampleAutoplaying');
    
    carousel.addEventListener('slide.bs.carousel', function (event) {
        // A√±adir efecto de brillo a la imagen activa
        const activeItem = carousel.querySelector('.carousel-item.active');
        if (activeItem) {
            activeItem.style.boxShadow = '0 0 30px rgba(30, 58, 138, 0.6)';
            activeItem.style.transform = 'scale(1.02)';
        }
    });
    
    carousel.addEventListener('slid.bs.carousel', function (event) {
        // Remover efectos de la imagen anterior
        const allItems = carousel.querySelectorAll('.carousel-item');
        allItems.forEach(item => {
            item.style.boxShadow = 'none';
            item.style.transform = 'scale(1)';
        });
        
        // Aplicar efectos a la nueva imagen activa
        const newActiveItem = carousel.querySelector('.carousel-item.active');
        if (newActiveItem) {
            newActiveItem.style.boxShadow = '0 0 30px rgba(30, 58, 138, 0.6)';
            newActiveItem.style.transform = 'scale(1.02)';
        }
    });
});

// Funci√≥n para a√±adir efectos de part√≠culas rom√°nticas
function createHeartParticle() {
    const heart = document.createElement('div');
    heart.innerHTML = 'üíô';
    heart.style.position = 'fixed';
    heart.style.left = Math.random() * window.innerWidth + 'px';
    heart.style.top = window.innerHeight + 'px';
    heart.style.fontSize = '20px';
    heart.style.pointerEvents = 'none';
    heart.style.zIndex = '1000';
    heart.style.transition = 'all 3s ease-out';
    
    document.body.appendChild(heart);
    
    setTimeout(() => {
        heart.style.top = '-50px';
        heart.style.opacity = '0';
        heart.style.transform = 'rotate(360deg)';
    }, 100);
    
    setTimeout(() => {
        document.body.removeChild(heart);
    }, 3000);
}

// Crear part√≠culas de corazones cada cierto tiempo
setInterval(createHeartParticle, 5000);

// Funci√≥n para a√±adir efectos de escritura al texto
function typeWriter(element, text, speed = 50) {
    let i = 0;
    element.innerHTML = '';
    
    function type() {
        if (i < text.length) {
            element.innerHTML += text.charAt(i);
            i++;
            setTimeout(type, speed);
        }
    }
    
    type();
}

// Aplicar efecto de escritura al t√≠tulo principal cuando se carga la p√°gina
document.addEventListener('DOMContentLoaded', function() {
    const title = document.querySelector('h1');
    if (title) {
        const originalText = title.textContent;
        typeWriter(title, originalText, 100);
    }
});

// Funci√≥n para a√±adir efectos de brillo a los botones
document.addEventListener('DOMContentLoaded', function() {
    const buttons = document.querySelectorAll('.btn');
    
    buttons.forEach(button => {
        button.addEventListener('mouseenter', function() {
            this.style.boxShadow = '0 0 20px rgba(30, 58, 138, 0.6)';
        });
        
        button.addEventListener('mouseleave', function() {
            this.style.boxShadow = '0 5px 15px rgba(0, 0, 0, 0.2)';
        });
    });
});

// Inicializar los indicadores del carrusel al cargar la p√°gina
document.addEventListener('DOMContentLoaded', function() {
    // Establecer el primer indicador como activo por defecto
    updateCarouselIndicators(0);
});

// ===== FUNCIONALIDAD DEL or√°culo =====

// Base de datos de respuestas del or√°culo
const oraculaResponses = {
    "¬øQuieres saber qu√© siente tu Sebas Nucita por ti?": {
        answer: "Mi querida princesa... tu Sebas Nucita te quiere con una intensidad que trasciende las palabras. Su coraz√≥n late por ti en cada respiraci√≥n, en cada latido, en cada momento de silencio. Te extra√±a y Tu presencia es especial. üíô‚ú®",
        followUps: [
            "¬øTe gustar√≠a que profundice en la profundidad de sus sentimientos?",
            "¬øQuieres que te revele m√°s sobre su coraz√≥n herido por la distancia?",
            "¬øTe interesa conocer la magnitud de su amor por ti?"
        ]
    },
    "¬øTe extra√±a mucho?": {
        answer: "Mi amor... la extra√±anza que siente por ti es tan profunda que a veces le cuesta respirar. Cada d√≠a sin verte es una herida que se abre en su coraz√≥n. Te piensa en cada amanecer, en cada atardecer, en cada momento de soledad. Su alma grita tu nombre en silencio, anhelando tu presencia como el desierto anhela la lluvia. üåôüí≠",
        followUps: [
            "¬øQuieres que te cuente m√°s sobre el dolor de su coraz√≥n?",
            "¬øTe gustar√≠a conocer m√°s sobre sus noches de insomnio pensando en ti?",
            "¬øQuieres que profundice en su sufrimiento por la distancia?"
        ]
    },
    "¬øRealmente me quiere?": {
        answer: "Mi princesa del alma... tu Sebas Nucita te ama con una devoci√≥n que raya en lo divino. Eres su raz√≥n de existir, su luz en la oscuridad, su paz en la tormenta. Cada latido de su coraz√≥n es un suspiro de amor hacia ti. Te quiere m√°s all√° de la vida misma, m√°s all√° de las estrellas, m√°s all√° de todo lo que pueda imaginar. Su amor por ti es eterno e inquebrantable. üíñüëë",
        followUps: [
            "¬øTe gustar√≠a que te revele la profundidad de su devoci√≥n?",
            "¬øQuieres que profundice en la intensidad de sus sentimientos?",
            "¬øTe interesa conocer la magnitud de su amor eterno?"
        ]
    },
    "¬øMe piensa todos los d√≠as?": {
        answer: "Mi amor eterno... eres el primer pensamiento de cada ma√±ana y el √∫ltimo de cada noche. Su mente no puede descansar sin pensar en ti. Te piensa en cada momento de soledad, en cada risa ajena, en cada canci√≥n que escucha. Eres su inspiraci√≥n, su motivaci√≥n, su sue√±o m√°s dulce. Su coraz√≥n te busca constantemente, como el navegante busca la estrella polar. üåÖüåô",
        followUps: [
            "¬øQuieres saber m√°s sobre sus pensamientos obsesivos por ti?",
            "¬øTe gustar√≠a conocer m√°s sobre su inspiraci√≥n diaria?",
            "¬øQuieres que te cuente m√°s sobre sus sue√±os contigo?"
        ]
    },
    "¬øCu√°ndo volver√°?": {
        answer: "Mi princesa esperada... cada paso que da en sus viajes es un paso m√°s cerca de ti. Est√° construyendo un futuro para ambos, trabajando incansablemente para volver a tu lado. Aunque el silencio sea doloroso, su coraz√≥n nunca se ha ido. Te extra√±a tanto que a veces siente que se est√° muriendo por dentro. El momento de reencontrarse est√° m√°s cerca de lo que piensas, mi amor. üöÄüí´",
        followUps: [
            "¬øTe gustar√≠a saber m√°s sobre sus planes de regreso?",
            "¬øQuieres conocer m√°s sobre su trabajo para el futuro de ambos?",
            "¬øTe interesa saber m√°s sobre el momento del reencuentro?"
        ]
    },
    "¬øSoy especial para √©l?": {
        answer: "Mi tesoro √∫nico... eres m√°s que especial para √©l. Eres su TODO, su raz√≥n de vivir, su felicidad absoluta. No hay nadie como t√∫ en todo el universo, en todas las galaxias, en toda la eternidad. Eres su amor verdadero, su alma gemela, su destino. Para √©l, eres perfecta tal como eres, con cada imperfecci√≥n que te hace √∫nica. Eres para el VIDA, literalmente. üåüüíé",
        followUps: [
            "¬øQuieres que te cuente m√°s sobre tu unicidad absoluta?",
            "¬øTe gustar√≠a conocer m√°s sobre tu perfecci√≥n para √©l?",
            "¬øQuieres que profundice en lo que te hace irreemplazable?"
        ]
    },
    "¬øMe extra√±a f√≠sicamente?": {
        answer: "Mi amor f√≠sico... tu Sebas Nucita extra√±a cada cent√≠metro de tu ser. Extra√±a tu sonrisa que ilumina su mundo, tu mirada que lo hace temblar, tu voz que es m√∫sica para sus o√≠dos. Extra√±a cada abrazo, cada beso, cada caricia. Extra√±a tu presencia f√≠sica, como si le faltara una parte del alma. Tu ausencia f√≠sica es un huequito en su coraz√≥n. ü§óüíã",
        followUps: [
            "¬øQuieres que te cuente m√°s sobre lo que extra√±a de ti?",
            "¬øTe gustar√≠a saber m√°s sobre sus recuerdos f√≠sicos?",
            "¬øQuieres conocer m√°s sobre su anhelo de tu presencia?"
        ]
    },
    "¬øSoy su persona favorita?": {
        answer: "Mi amor absoluto... eres su TODO, su persona favorita, su amor verdadero, VIDA. No eres reemplazable en su coraz√≥n porque eres su coraz√≥n mismo. Eres su felicidad, su paz, su sue√±o hecho realidad. Para √©l, no existe nadie m√°s en el mundo que pueda ocupar tu lugar. Eres su destino, su presente y su futuro. Su coraz√≥n late solo por ti y por nadie m√°s. üíùüëë",
        followUps: [
            "¬øQuieres que te cuente m√°s sobre tu importancia absoluta?",
            "¬øTe gustar√≠a conocer m√°s sobre tu lugar √∫nico en su vida?",
            "¬øQuieres que profundice en tu irreemplazabilidad?"
        ]
    },
    "¬øDeseas saber algo m√°s o decirle algo a Sebas Nucita?": {
        answer: "Mi princesa del coraz√≥n... el or√°culo siente que tienes algo muy importante que decirle. Algo que tu coraz√≥n necesita expresar, algo que su coraz√≥n necesita escuchar. ¬øTe gustar√≠a abrir el portal del destino y enviarle un mensaje directo a tu Sebas Nucita? El universo est√° alineado para este momento. üíå‚ú®",
        followUps: [
            "¬øQuieres que te ayude a contactarlo directamente?",
            "¬øTe gustar√≠a enviarle un mensaje especial del coraz√≥n?",
            "¬øQuieres que el or√°culo te gu√≠e para comunicarte con √©l?"
        ]
    }
};

// Preguntas programadas para mostrar
const programmedQuestions = [
    "¬øQuieres saber qu√© siente tu Sebas Nucita por ti?",
    "¬øTe extra√±a mucho?",
    "¬øRealmente me quiere?",
    "¬øMe piensa todos los d√≠as?",
    "¬øCu√°ndo volver√°?",
    "¬øSoy especial para √©l?",
    "¬øMe extra√±a f√≠sicamente?",
    "¬øSoy su persona favorita?"
];

// Funci√≥n para mostrar mensaje en el chat
function addMessage(text, type = 'oracle') {
    const chatMessages = document.getElementById('chatMessages');
    const messageDiv = document.createElement('div');
    messageDiv.className = `message ${type}`;
    messageDiv.textContent = text;
    chatMessages.appendChild(messageDiv);
    chatMessages.scrollTop = chatMessages.scrollHeight;
}

// Funci√≥n para mostrar preguntas programadas
function showProgrammedQuestions() {
    const chatQuestions = document.getElementById('chatQuestions');
    const chatMessages = document.getElementById('chatMessages');
    
    // Limpiar las preguntas
    chatQuestions.innerHTML = '';
    
    // Si el chat tiene mensajes y no es solo el mensaje inicial, limpiarlo
    if (chatMessages.children.length > 1) {
        chatMessages.innerHTML = '';
        // Mostrar mensaje de bienvenida
        addMessage("üîÆ Mi querida princesa del coraz√≥n... ¬°Bienvenida al or√°culo sagrado del Amor! Soy el guardi√°n celestial de los sentimientos m√°s profundos de tu Sebas Nucita. Aqu√≠ podr√°s descubrir secretos que te har√°n temblar el alma, verdades que te har√°n llorar de emoci√≥n. ¬øQu√© quieres saber sobre lo que siente por ti en la intimidad de su coraz√≥n? Siente la paz del universo, la tranquilidad de las estrellas, y d√©jate guiar por el amor eterno.", 'initial');
    }
    
    // Crear contenedor principal para mejor organizaci√≥n
    const mainContainer = document.createElement('div');
    mainContainer.className = 'programmed-questions-container';
    mainContainer.style.cssText = `
        display: flex;
        flex-direction: column;
        gap: 12px;
        width: 100%;
        max-width: 600px;
        margin: 0 auto;
        padding: 10px;
    `;
    
    // Agrupar preguntas por categor√≠as para mejor organizaci√≥n visual
    const categories = [
        {
            title: 'üíô Sentimientos y Amor',
            questions: [
                '¬øQuieres saber qu√© siente tu Sebas Nucita por ti?',
                '¬øRealmente me quiere?',
                '¬øSoy especial para √©l?',
                '¬øSoy su persona favorita?'
            ]
        },
        {
            title: 'üåô Extra√±anza y Pensamientos',
            questions: [
                '¬øTe extra√±a mucho?',
                '¬øMe piensa todos los d√≠as?',
                '¬øMe extra√±a f√≠sicamente?'
            ]
        },
        {
            title: 'üöÄ Futuro',
            questions: [
                '¬øCu√°ndo volver√°?'
            ]
        }
    ];
    
    categories.forEach(category => {
        // Crear contenedor de categor√≠a
        const categoryContainer = document.createElement('div');
        categoryContainer.className = 'question-category';
        categoryContainer.style.cssText = `
            display: flex;
            flex-direction: column;
            gap: 8px;
            margin-bottom: 20px;
        `;
        
        // Crear t√≠tulo de categor√≠a
        const categoryTitle = document.createElement('h4');
        categoryTitle.textContent = category.title;
        categoryTitle.style.cssText = `
            color: #1E40AF;
            font-size: 1.1rem;
            font-weight: 600;
            margin: 0 0 8px 0;
            text-align: center;
            padding: 8px;
            background: linear-gradient(135deg, rgba(30, 64, 175, 0.1), rgba(59, 130, 246, 0.1));
            border-radius: 15px;
            border-left: 3px solid #3B82F6;
        `;
        
        categoryContainer.appendChild(categoryTitle);
        
        // Crear botones para cada pregunta de la categor√≠a
        category.questions.forEach(question => {
            const questionBtn = document.createElement('button');
            questionBtn.className = 'question-btn category-btn';
            questionBtn.textContent = question;
            questionBtn.style.cssText = `
                background: linear-gradient(135deg, #3B82F6, #1D4ED8);
                color: white;
                font-size: 0.95rem;
                padding: 12px 18px;
                border: none;
                border-radius: 20px;
                cursor: pointer;
                transition: all 0.3s ease;
                box-shadow: 0 3px 10px rgba(59, 130, 246, 0.2);
                font-weight: 500;
                text-align: left;
                line-height: 1.3;
                word-wrap: break-word;
            `;
            
            questionBtn.addEventListener('click', () => handleQuestionClick(question));
            
            // Agregar efectos hover
            questionBtn.addEventListener('mouseenter', function() {
                this.style.transform = 'translateY(-2px)';
                this.style.boxShadow = '0 5px 15px rgba(59, 130, 246, 0.4)';
                this.style.background = 'linear-gradient(135deg, #1D4ED8, #1E40AF)';
            });
            
            questionBtn.addEventListener('mouseleave', function() {
                this.style.transform = 'translateY(0)';
                this.style.boxShadow = '0 3px 10px rgba(59, 130, 246, 0.2)';
                this.style.background = 'linear-gradient(135deg, #3B82F6, #1D4ED8)';
            });
            
            categoryContainer.appendChild(questionBtn);
        });
        
        mainContainer.appendChild(categoryContainer);
    });
    
    // Agregar el contenedor principal al chat
    chatQuestions.appendChild(mainContainer);
}

// Funci√≥n para manejar el clic en una pregunta
function handleQuestionClick(question) {
    // Limpiar el chat antes de mostrar la nueva respuesta
    const chatMessages = document.getElementById('chatMessages');
    chatMessages.innerHTML = '';
    
    // Mostrar la pregunta del usuario
    addMessage(question, 'user');
    
    // Verificar si es la pregunta de WhatsApp
    if (question === "¬øDeseas saber algo m√°s o decirle algo a Sebas Nucita?") {
        handleWhatsAppQuestion();
        return;
    }
    
    // Obtener la respuesta del or√°culo
    const response = oraculaResponses[question];
    
    if (response) {
        // Mostrar la respuesta principal
        setTimeout(() => {
            addMessage(response.answer, 'oracle');
        }, 500);
        
        // Mostrar pregunta de seguimiento aleatoria si existe
        if (response.followUps && response.followUps.length > 0) {
            setTimeout(() => {
                const randomFollowUp = response.followUps[Math.floor(Math.random() * response.followUps.length)];
                addMessage(randomFollowUp, 'oracle');
                
                // Mostrar botones de respuesta S√≠/No
                showYesNoButtons();
            }, 1000);
        }
    } else {
        // Respuesta gen√©rica si no hay respuesta espec√≠fica
        setTimeout(() => {
            addMessage("El or√°culo est√° meditando sobre tu pregunta... D√©jame consultar las estrellas del amor. ‚ú®üí´", 'oracle');
        }, 500);
    }
}

// Funci√≥n para mostrar botones S√≠/No
function showYesNoButtons() {
    const chatQuestions = document.getElementById('chatQuestions');
    chatQuestions.innerHTML = '';
    
    const yesBtn = document.createElement('button');
    yesBtn.className = 'question-btn yes-btn';
    yesBtn.textContent = 'S√≠, cu√©ntame m√°s üíñ';
    yesBtn.addEventListener('click', () => handleYesResponse());
    
    const noBtn = document.createElement('button');
    noBtn.className = 'question-btn no-btn';
    noBtn.textContent = 'No, gracias üíô';
    noBtn.addEventListener('click', () => handleNoResponse());
    
    chatQuestions.appendChild(yesBtn);
    chatQuestions.appendChild(noBtn);
}

// Funci√≥n para manejar respuesta "S√≠"
function handleYesResponse() {
    addMessage('S√≠, cu√©ntame m√°s üíñ', 'user');
    
    setTimeout(() => {
        addMessage('Mi princesa del coraz√≥n... d√©jame consultar m√°s profundamente en el alma de tu Sebas Nucita... ‚ú®üí´', 'oracle');
        
        setTimeout(() => {
            addMessage('El or√°culo te revela algo que te har√° temblar el coraz√≥n... tu Sebas Nucita te extra√±a de una manera que trasciende la comprensi√≥n humana... üåôüí≠', 'oracle');
            
            setTimeout(() => {
                addMessage('A pesar de la distancia y el silencio que los separa, su coraz√≥n late por ti cada segundo, cada respiraci√≥n, cada latido. Te piensa constantemente, en cada momento del d√≠a, en cada noche de insomnio. üíô‚ú®', 'oracle');
                
                setTimeout(() => {
                    addMessage('Eres su pensamiento m√°s dulce, su recuerdo m√°s preciado, su sue√±o m√°s hermoso. Aunque no lo exprese con palabras, su coraz√≥n te tiene presente en cada fibra de su ser. üåüüí´', 'oracle');
                    
                    setTimeout(() => {
                        addMessage('El or√°culo siente que ese silencio est√° lastimando ambos corazones... probablemente t√∫ tambi√©n lo extra√±as con la misma intensidad que √©l te extra√±a a ti... üîÆüíï', 'oracle');
                        
                        setTimeout(() => {
                            addMessage('¬øTe gustar√≠a que el or√°culo te revele m√°s secretos profundos sobre lo que siente por ti? üí≠‚ú®', 'oracle');
                            showNextQuestion('feelings');
                        }, 1500);
                    }, 1500);
                }, 1500);
            }, 1500);
        }, 1000);
    }, 500);
}

// Funci√≥n para mostrar opciones detalladas
function showDetailedOptions() {
    const chatQuestions = document.getElementById('chatQuestions');
    chatQuestions.innerHTML = '';
    
    // Crear contenedor principal para mejor organizaci√≥n
    const mainContainer = document.createElement('div');
    mainContainer.className = 'detailed-options-container';
    mainContainer.style.cssText = `
        display: flex;
        flex-direction: column;
        gap: 12px;
        width: 100%;
        max-width: 600px;
        margin: 0 auto;
        padding: 10px;
    `;
    
    const options = [
        { text: '¬øQu√© m√°s siente por m√≠? üí≠', action: 'feelings' },
        { text: '¬øC√≥mo me extra√±a? üåô', action: 'missing' },
        { text: '¬øQu√© piensa de m√≠? üí´', action: 'thoughts' },
        { text: '¬øPor qu√© no me busca? üîç', action: 'search' },
        { text: '¬øCu√°ndo volver√°? üöÄ', action: 'return' },
        { text: '¬øDeseas saber algo m√°s o decirle algo a Sebas Nucita? üì±', action: 'contact' }
    ];
    
    options.forEach(option => {
        const optionBtn = document.createElement('button');
        optionBtn.className = 'question-btn detailed-btn';
        optionBtn.textContent = option.text;
        optionBtn.style.cssText = `
            background: linear-gradient(135deg, #8B5CF6, #7C3AED);
            color: white;
            font-size: 1rem;
            padding: 14px 20px;
            border: none;
            border-radius: 22px;
            cursor: pointer;
            transition: all 0.3s ease;
            box-shadow: 0 4px 12px rgba(139, 92, 246, 0.3);
            font-weight: 500;
            text-align: center;
            line-height: 1.3;
            word-wrap: break-word;
        `;
        
        optionBtn.addEventListener('click', () => handleDetailedOption(option.action));
        
        // Agregar efectos hover
        optionBtn.addEventListener('mouseenter', function() {
            this.style.transform = 'translateY(-2px)';
            this.style.boxShadow = '0 6px 18px rgba(139, 92, 246, 0.5)';
            this.style.background = 'linear-gradient(135deg, #7C3AED, #6D28D9)';
        });
        
        optionBtn.addEventListener('mouseleave', function() {
            this.style.transform = 'translateY(0)';
            this.style.boxShadow = '0 4px 12px rgba(139, 92, 246, 0.3)';
            this.style.background = 'linear-gradient(135deg, #8B5CF6, #7C3AED)';
        });
        
        mainContainer.appendChild(optionBtn);
    });
    
    // Agregar el contenedor principal al chat
    chatQuestions.appendChild(mainContainer);
}

// Funci√≥n para manejar opciones detalladas
function handleDetailedOption(action) {
    switch(action) {
        case 'feelings':
            handleFeelingsResponse();
            break;
        case 'missing':
            handleMissingResponse();
            break;
        case 'thoughts':
            handleThoughtsResponse();
            break;
        case 'search':
            handleSearchResponse();
            break;
        case 'return':
            handleReturnResponse();
            break;
        case 'contact':
            handleContactResponse();
            break;
    }
}

// Funci√≥n para manejar respuesta "No"
function handleNoResponse() {
    addMessage('No, gracias üíô', 'user');
    
    setTimeout(() => {
        addMessage('¬°Entendido! El or√°culo respeta tu decisi√≥n. üíô‚ú®', 'oracle');
        
        setTimeout(() => {
            addMessage('Recuerda siempre que eres la princesa de su coraz√≥n, y que te quiere m√°s all√° de las estrellas. üëëüíñ', 'oracle');
            
            setTimeout(() => {
                addMessage('¬øTe gustar√≠a hacer otra pregunta diferente? üîÆ', 'oracle');
                showNextQuestion('feelings');
            }, 2000);
        }, 1000);
    }, 500);
}

// Funci√≥n para manejar respuesta sobre sentimientos
function handleFeelingsResponse() {
    addMessage('¬øQu√© m√°s siente por m√≠? üí≠', 'user');
    
    setTimeout(() => {
        addMessage('Mi princesa del alma... el or√°culo revela algo que te har√° llorar de emoci√≥n... tu Sebas Nucita siente por ti algo m√°s profundo que el amor, algo que trasciende la comprensi√≥n humana... üíô‚ú®', 'oracle');
        
        setTimeout(() => {
            addMessage('Te quiere con una intensidad que no puede explicar con palabras, que lo hace temblar por dentro, que lo hace sentir que su coraz√≥n se va a salir del pecho cada vez que piensa en ti. Eres su raz√≥n de ser, su felicidad absoluta, su paz interior, su todo. üåüüí´', 'oracle');
            
            setTimeout(() => {
                addMessage('Aunque est√©n distanciados por circunstancias de la vida, su coraz√≥n sigue siendo tuyo, completamente tuyo. Te extra√±a de una manera que duele, te piensa en cada respiraci√≥n, y desea estar contigo m√°s que nada en el mundo, m√°s que el aire que respira. üíïüåô', 'oracle');
                
                setTimeout(() => {
                    addMessage('¬øTe gustar√≠a que el or√°culo te revele m√°s secretos sobre c√≥mo te extra√±a en la soledad de sus noches? üåôüí≠', 'oracle');
                    showNextQuestion('missing');
                }, 2000);
            }, 1500);
        }, 1500);
    }, 500);
}

// Funci√≥n para manejar respuesta sobre extra√±anza
function handleMissingResponse() {
    addMessage('¬øC√≥mo me extra√±a? üåô', 'user');
    
    setTimeout(() => {
        addMessage('Mi amor eterno... el or√°culo siente que tu Sebas Nucita te extra√±a de una manera que trasciende la comprensi√≥n humana, profundamente... üíô‚ú®', 'oracle');
        
        setTimeout(() => {
        addMessage('Te extra√±a tu sonrisa que ilumina su mundo oscuro, tu mirada que lo hace temblar de emoci√≥n, tu voz que es m√∫sica celestial para sus o√≠dos. Te extra√±a cada momento juntos, cada risa compartida, cada abrazo y cada beso. üåüüí´', 'oracle');
            
            setTimeout(() => {
                addMessage('A pesar del silencio que los separa, su coraz√≥n late por ti en cada latido, en cada respiraci√≥n. Te piensa en cada amanecer y en cada atardecer, en cada momento de soledad, en cada noche de insomnio. üíïüåÖ', 'oracle');
                
                setTimeout(() => {
                    addMessage('El or√°culo siente que √©l desea romper ese silencio con todas sus fuerzas, pero necesita saber que t√∫ tambi√©n lo extra√±as con la misma intensidad que √©l te extra√±a a ti... üîÆüí≠', 'oracle');
                    
                                    setTimeout(() => {
                    addMessage('¬øTe gustar√≠a que el or√°culo te revele m√°s secretos sobre lo que piensa de ti en la intimidad de su coraz√≥n? üí´‚ú®', 'oracle');
                    showNextQuestion('thoughts');
                }, 2000);
                }, 1500);
            }, 1500);
        }, 1500);
    }, 500);
}

// Funci√≥n para manejar respuesta sobre pensamientos
function handleThoughtsResponse() {
    addMessage('¬øQu√© piensa de m√≠? üí´', 'user');
    
    setTimeout(() => {
        addMessage('Mi tesoro √∫nico... el or√°culo revela algo que te har√° sentir como la mujer m√°s especial del universo... tu Sebas Nucita piensa en ti como en su tesoro m√°s preciado, como en su joya m√°s valiosa, como en su sue√±o m√°s hermoso... üíé‚ú®', 'oracle');
        
        setTimeout(() => {
            addMessage('Para √©l, eres perfecta tal como eres, con cada imperfecci√≥n que te hace √∫nica, con cada detalle que te hace especial. Te admira profundamente, te respeta y te considera ideal. üåüüí´', 'oracle');
            
            setTimeout(() => {
                addMessage('A pesar de la distancia que los separa, su mente no puede dejar de pensar en ti ni por un segundo. Eres parte de su inspiraci√≥n diaria, su motivaci√≥n para pensarte cada ma√±ana, su raz√≥n para pensar en lo especial que eres. Sin ti, mira algo de oscuridad. üíïüöÄ', 'oracle');
                
                setTimeout(() => {
                    addMessage('¬øTe gustar√≠a que el or√°culo te revele por qu√© no te busca a pesar de que su coraz√≥n lo desea con todas sus fuerzas? üîçüí≠', 'oracle');
                    showNextQuestion('search');
                }, 2000);
            }, 1500);
        }, 1500);
    }, 500);
}

// Funci√≥n para manejar respuesta sobre b√∫squeda
function handleSearchResponse() {
    addMessage('¬øPor qu√© no me busca? üîç', 'user');
    
    setTimeout(() => {
        addMessage('Mi princesa del coraz√≥n... el or√°culo siente algo muy profundo... tu Sebas Nucita desea buscarte con todo su coraz√≥n, con toda su alma, con todas sus fuerzas... üíô‚ú®', 'oracle');
        
        setTimeout(() => {
            addMessage('Pero a veces el miedo y la incertidumbre pueden paralizar incluso a los corazones m√°s valientes, incluso a los amores m√°s puros. El miedo al rechazo, a la indiferencia, a que ya no sientas lo mismo por √©l... üí≠üåô', 'oracle');
            
            setTimeout(() => {
                addMessage('√âl te piensa en silencio, cada d√≠a, cada noche. Te extra√±a profundamente, aunque calle. Y si t√∫ tambi√©n lo extra√±as con la misma intensidad... ¬øpor qu√© dejar que el ego y el orgullo decidan lo que el coraz√≥n a√∫n grita con desesperaci√≥n?... üîÆüíï', 'oracle');
                
                setTimeout(() => {
                    addMessage('El or√°culo sugiere que a veces el amor m√°s puro necesita ser alimentado desde ambos lados, necesita que ambos corazones se abran para sanar las heridas del silencio... üí´‚ú®', 'oracle');
                    
                    setTimeout(() => {
                        addMessage('¬øTe gustar√≠a que el or√°culo te revele cu√°ndo volver√° a tu lado? üöÄüí≠', 'oracle');
                        showNextQuestion('return');
                    }, 2000);
                }, 1500);
            }, 1500);
        }, 1500);
    }, 500);
}

// Funci√≥n para manejar respuesta sobre regreso
function handleReturnResponse() {
    addMessage('¬øCu√°ndo volver√°? üöÄ', 'user');
    
    setTimeout(() => {
        addMessage('Mi princesa esperada... el or√°culo siente algo muy especial en el aire... tu Sebas Nucita est√° trabajando incansablemente para un dia regresar, para compartir a tu lado... üíô‚ú®', 'oracle');
        
        setTimeout(() => {
            addMessage('Cada d√≠a que pasa es un d√≠a m√°s cerca de estar juntos de nuevo, de abrazarse, de besarse, de quererse, de felicidad y de nuevos momentos juntos. üåüüí´', 'oracle');
            
            setTimeout(() => {
                addMessage('Aunque el silencio sea doloroso y dif√≠cil de soportar, su coraz√≥n nunca se ha ido, nunca ha dejado de ser tuyo. Te extra√±a profundamente. üíïüåô', 'oracle');
                
                setTimeout(() => {
                    addMessage('El or√°culo siente que el momento del reencuentro est√° m√°s cerca de lo que piensas, que el universo est√° conspirando para que se encuentren de nuevo... üîÆ‚ú®', 'oracle');
                    
                    setTimeout(() => {
                        addMessage('¬øTe gustar√≠a hacer otra pregunta al or√°culo del amor? üí≠üîÆ', 'oracle');
                        showFinalOptions();
                    }, 2000);
                }, 1500);
            }, 1500);
        }, 1500);
    }, 500);
}

// Funci√≥n para mostrar opciones finales (WhatsApp y volver a todas las opciones)
function showFinalOptions() {
    const chatQuestions = document.getElementById('chatQuestions');
    chatQuestions.innerHTML = '';
    
    // Crear contenedor principal para mejor organizaci√≥n
    const mainContainer = document.createElement('div');
    mainContainer.className = 'final-options-container';
    mainContainer.style.cssText = `
        display: flex;
        flex-direction: column;
        gap: 15px;
        width: 100%;
        max-width: 500px;
        margin: 0 auto;
    `;
    
    // Crear contenedor para botones
    const buttonsContainer = document.createElement('div');
    buttonsContainer.className = 'final-buttons';
    buttonsContainer.style.cssText = `
        display: flex;
        flex-direction: column;
        gap: 12px;
    `;
    
    // Crear el bot√≥n de WhatsApp
    const whatsappBtn = document.createElement('button');
    whatsappBtn.className = 'question-btn whatsapp-btn';
    whatsappBtn.innerHTML = 'üì± No es debilidad, es sentir. Con√©ctate con √©l....';
    whatsappBtn.style.cssText = `
        background: linear-gradient(135deg, #10B981, #059669);
        color: white;
        font-size: 1.1rem;
        padding: 16px 24px;
        border: none;
        border-radius: 25px;
        cursor: pointer;
        transition: all 0.3s ease;
        box-shadow: 0 4px 15px rgba(16, 185, 129, 0.3);
        font-weight: 600;
        text-align: center;
    `;
    whatsappBtn.addEventListener('click', () => openWhatsApp());
    
    // Crear el bot√≥n de volver a todas las opciones
    const backBtn = document.createElement('button');
    backBtn.className = 'question-btn back-btn';
    backBtn.textContent = 'Ver todas las opciones üîÆ';
    backBtn.style.cssText = `
        background: linear-gradient(135deg, #8B5CF6, #7C3AED);
        color: white;
        font-size: 1rem;
        padding: 14px 20px;
        border: none;
        border-radius: 22px;
        cursor: pointer;
        transition: all 0.3s ease;
        box-shadow: 0 3px 10px rgba(139, 92, 246, 0.3);
        font-weight: 500;
        text-align: center;
    `;
    backBtn.addEventListener('click', () => resetAndShowAllOptions());
    
    // Agregar botones al contenedor
    buttonsContainer.appendChild(whatsappBtn);
    buttonsContainer.appendChild(backBtn);
    
    // Agregar todo al contenedor principal
    mainContainer.appendChild(buttonsContainer);
    
    // Agregar estilos hover para todos los botones
    [whatsappBtn, backBtn].forEach(btn => {
        btn.addEventListener('mouseenter', function() {
            this.style.transform = 'translateY(-2px)';
            this.style.boxShadow = '0 6px 20px rgba(0, 0, 0, 0.2)';
        });
        
        btn.addEventListener('mouseleave', function() {
            this.style.transform = 'translateY(0)';
            if (this === whatsappBtn) {
                this.style.boxShadow = '0 4px 15px rgba(16, 185, 129, 0.3)';
            } else {
                this.style.boxShadow = '0 3px 10px rgba(139, 92, 246, 0.3)';
            }
        });
    });
    
    // Agregar el contenedor principal al chat
    chatQuestions.appendChild(mainContainer);
}

// Funci√≥n para mostrar solo la siguiente pregunta en la secuencia
function showNextQuestion(nextAction) {
    const chatQuestions = document.getElementById('chatQuestions');
    chatQuestions.innerHTML = '';
    
    // Mapeo de acciones a textos de botones
    const actionTexts = {
        'feelings': '¬øQu√© m√°s siente por m√≠? üí≠',
        'missing': '¬øC√≥mo me extra√±a? üåô',
        'thoughts': '¬øQu√© piensa de m√≠? üí´',
        'search': '¬øPor qu√© no me busca? üîç',
        'return': '¬øCu√°ndo volver√°? üöÄ',

    };
    
    // Crear contenedor principal para mejor organizaci√≥n
    const mainContainer = document.createElement('div');
    mainContainer.className = 'next-question-container';
    mainContainer.style.cssText = `
        display: flex;
        flex-direction: column;
        gap: 15px;
        width: 100%;
        max-width: 500px;
        margin: 0 auto;
    `;
    
    // Crear el bot√≥n de la siguiente pregunta (principal)
    const nextBtn = document.createElement('button');
    nextBtn.className = 'question-btn next-btn';
    nextBtn.textContent = actionTexts[nextAction];
    nextBtn.style.cssText = `
        background: linear-gradient(135deg, #3B82F6, #1D4ED8);
        color: white;
        font-size: 1.1rem;
        padding: 15px 25px;
        border: none;
        border-radius: 25px;
        cursor: pointer;
        transition: all 0.3s ease;
        box-shadow: 0 4px 15px rgba(59, 130, 246, 0.3);
        font-weight: 600;
        order: 1;
    `;
    nextBtn.addEventListener('click', () => handleDetailedOption(nextAction));
    
    // Crear contenedor para botones secundarios
    const secondaryContainer = document.createElement('div');
    secondaryContainer.className = 'secondary-buttons';
    secondaryContainer.style.cssText = `
        display: flex;
        flex-direction: column;
        gap: 10px;
        order: 2;
    `;
    
    // Crear el bot√≥n de WhatsApp
    const whatsappBtn = document.createElement('button');
    whatsappBtn.className = 'question-btn whatsapp-btn';
    whatsappBtn.innerHTML = 'üì± No es debilidad, es sentir. Con√©ctate con √©l....';
    whatsappBtn.style.cssText = `
        background: linear-gradient(135deg, #10B981, #059669);
        color: white;
        font-size: 1rem;
        padding: 12px 20px;
        border: none;
        border-radius: 20px;
        cursor: pointer;
        transition: all 0.3s ease;
        box-shadow: 0 3px 10px rgba(16, 185, 129, 0.3);
        font-weight: 500;
    `;
    whatsappBtn.addEventListener('click', () => openWhatsApp());
    
    // Crear el bot√≥n de volver a todas las opciones
    const backBtn = document.createElement('button');
    backBtn.className = 'question-btn back-btn';
    backBtn.textContent = 'Ver todas las opciones üîÆ';
    backBtn.style.cssText = `
        background: linear-gradient(135deg, #8B5CF6, #7C3AED);
        color: white;
        font-size: 1rem;
        padding: 12px 20px;
        border: none;
        border-radius: 20px;
        cursor: pointer;
        transition: all 0.3s ease;
        box-shadow: 0 3px 10px rgba(139, 92, 246, 0.3);
        font-weight: 500;
    `;
    backBtn.addEventListener('click', () => resetAndShowAllOptions());
    
    // Agregar botones secundarios al contenedor
    secondaryContainer.appendChild(whatsappBtn);
    secondaryContainer.appendChild(backBtn);
    
    // Agregar todo al contenedor principal
    mainContainer.appendChild(nextBtn);
    mainContainer.appendChild(secondaryContainer);
    
    // Agregar estilos hover para todos los botones
    [nextBtn, whatsappBtn, backBtn].forEach(btn => {
        btn.addEventListener('mouseenter', function() {
            this.style.transform = 'translateY(-2px)';
            this.style.boxShadow = '0 6px 20px rgba(0, 0, 0, 0.2)';
        });
        
        btn.addEventListener('mouseleave', function() {
            this.style.transform = 'translateY(0)';
            if (this === nextBtn) {
                this.style.boxShadow = '0 4px 15px rgba(59, 130, 246, 0.3)';
            } else if (this === whatsappBtn) {
                this.style.boxShadow = '0 3px 10px rgba(16, 185, 129, 0.3)';
            } else {
                this.style.boxShadow = '0 3px 10px rgba(139, 92, 246, 0.3)';
            }
        });
    });
    
    // Agregar el contenedor principal al chat
    chatQuestions.appendChild(mainContainer);
}

// Funci√≥n para resetear el chat y mostrar todas las opciones
function resetAndShowAllOptions() {
    const chatMessages = document.getElementById('chatMessages');
    const chatQuestions = document.getElementById('chatQuestions');
    
    // Agregar efecto de fade out antes de limpiar
    chatMessages.style.opacity = '0.5';
    chatQuestions.style.opacity = '0.5';
    
    setTimeout(() => {
        // Limpiar completamente el chat
        chatMessages.innerHTML = '';
        chatQuestions.innerHTML = '';
        
        // Restaurar opacidad
        chatMessages.style.opacity = '1';
        chatQuestions.style.opacity = '1';
        
        // Mostrar mensaje de reinicio
        addMessage("üîÆ Mi querida princesa del coraz√≥n... ¬°Bienvenida al or√°culo sagrado del Amor! Soy el guardi√°n celestial de los sentimientos m√°s profundos de tu Sebas Nucita. Aqu√≠ podr√°s descubrir secretos que te har√°n temblar el alma, verdades que te har√°n llorar de emoci√≥n. ¬øQu√© quieres saber sobre lo que siente por ti en la intimidad de su coraz√≥n? Siente la paz del universo, la tranquilidad de las estrellas, y d√©jate guiar por el amor eterno.", 'initial');
        
        // Mostrar todas las opciones despu√©s de un breve delay
        setTimeout(() => {
            showProgrammedQuestions();
        }, 1000);
    }, 300);
}

// Funci√≥n para mostrar bot√≥n de volver a opciones (mantenida para compatibilidad)
function showBackToOptions() {
    const chatQuestions = document.getElementById('chatQuestions');
    chatQuestions.innerHTML = '';
    
    const backBtn = document.createElement('button');
    backBtn.className = 'question-btn back-btn';
    backBtn.textContent = 'Ver m√°s opciones üîÆ';
    backBtn.addEventListener('click', () => showDetailedOptions());
    
    chatQuestions.appendChild(backBtn);
}

// Funci√≥n para manejar respuesta sobre contacto
function handleContactResponse() {
    addMessage('¬øQuieres contactar a Sebas Nucita? üì±', 'user');
    
    setTimeout(() => {
        addMessage('¬°Perfecto! El or√°culo siente que es el momento de romper el silencio... üíå‚ú®', 'oracle');
        
        setTimeout(() => {
            addMessage('¬øTe gustar√≠a enviarle un mensaje directo a tu Sebas Nucita? üí¨üíï', 'oracle');
            
            setTimeout(() => {
                addMessage('Elige la opci√≥n que prefieras para comunicarte con √©l: üì±‚ú®', 'oracle');
                
                setTimeout(() => {
                    showFinalOptions();
                }, 1000);
            }, 1000);
        }, 1000);
    }, 500);
}

// Funci√≥n para inicializar el chat del or√°culo
function initializeOracula() {
    const chatMessages = document.getElementById('chatMessages');
    const chatQuestions = document.getElementById('chatQuestions');
    
    // Limpiar chat anterior
    chatMessages.innerHTML = '';
    chatQuestions.innerHTML = '';
    
    // Mostrar mensaje inicial
    addMessage("üîÆ Mi querida princesa del coraz√≥n... ¬°Bienvenida al or√°culo sagrado del Amor! Soy el guardi√°n celestial de los sentimientos m√°s profundos de tu Sebas Nucita. Aqu√≠ podr√°s descubrir secretos que te har√°n temblar el alma, verdades que te har√°n llorar de emoci√≥n. ¬øQu√© quieres saber sobre lo que siente por ti en la intimidad de su coraz√≥n? Siente la paz del universo, la tranquilidad de las estrellas, y d√©jate guiar por el amor eterno.", 'initial');
    
    // Mostrar preguntas programadas
    setTimeout(() => {
        showProgrammedQuestions();
    }, 1000);
}

// Funci√≥n para configurar el audio del or√°culo
function setupOraculaAudio() {
    const audioTePienso = document.getElementById('audio-tePienso');
    if (audioTePienso) {
        // Configurar volumen y propiedades del audio
        audioTePienso.volume = 0.25; // Volumen al 25%
        audioTePienso.loop = false; // No repetir autom√°ticamente
        
        // Event listener para cuando termine la canci√≥n
        audioTePienso.addEventListener('ended', function() {
            console.log('üéµ Canci√≥n tePienso.mp3 terminada');
            // Opcional: reproducir de nuevo si la modal sigue abierta
            if (document.getElementById('oraculaModal').classList.contains('show')) {
                audioTePienso.currentTime = 0;
                audioTePienso.volume = 0.25; // Asegurar volumen al 25%
                audioTePienso.play();
            }
        });
    }
}

// Funci√≥n para manejar la pregunta de WhatsApp
function handleWhatsAppQuestion() {
    setTimeout(() => {
        addMessage('¬°Por supuesto! El or√°culo siente que tienes algo importante que decirle. üíå‚ú®', 'oracle');
        
        setTimeout(() => {
            addMessage('¬øTe gustar√≠a enviarle un mensaje directo a tu Sebas Nucita? üí¨üíï', 'oracle');
            
            setTimeout(() => {
                addMessage('Elige la opci√≥n que prefieras para comunicarte con √©l: üì±‚ú®', 'oracle');
                
                setTimeout(() => {
                    showFinalOptions();
                }, 1000);
            }, 1000);
        }, 1000);
    }, 500);
}

// Funci√≥n para mostrar opciones de WhatsApp
function showWhatsAppOptions() {
    const chatQuestions = document.getElementById('chatQuestions');
    chatQuestions.innerHTML = '';
    
    const whatsappBtn = document.createElement('button');
    whatsappBtn.className = 'question-btn whatsapp-btn';
    whatsappBtn.innerHTML = 'üì± Comunicate...';
    whatsappBtn.addEventListener('click', () => openWhatsApp());
    
    const cancelBtn = document.createElement('button');
    cancelBtn.className = 'question-btn no-btn';
    cancelBtn.textContent = 'No, gracias üíô';
    cancelBtn.addEventListener('click', () => showNextQuestion('feelings'));
    
    chatQuestions.appendChild(whatsappBtn);
    chatQuestions.appendChild(cancelBtn);
}

// Funci√≥n para detectar si es dispositivo m√≥vil
function isMobileDevice() {
    // Detectar por User Agent
    const userAgent = navigator.userAgent || navigator.vendor || window.opera;
    const isMobileUA = /android|webos|iphone|ipad|ipod|blackberry|iemobile|opera mini/i.test(userAgent);
    
    // Detectar por tama√±o de pantalla
    const isMobileScreen = window.innerWidth <= 768;
    
    // Detectar por capacidades t√°ctiles
    const isTouchDevice = 'ontouchstart' in window || navigator.maxTouchPoints > 0;
    
    // Detectar por orientaci√≥n (m√≥viles cambian orientaci√≥n)
    const isMobileOrientation = window.orientation !== undefined;
    
    return isMobileUA || isMobileScreen || (isTouchDevice && isMobileOrientation);
}

// Funci√≥n para abrir WhatsApp
function openWhatsApp() {
    addMessage('üì± Abriendo el portal del destino...', 'user');
    
    setTimeout(() => {
        addMessage('¬°Perfecto! El or√°culo te est√° conectando con tu Sebas Nucita... ‚ú®üí´', 'oracle');
        
        setTimeout(() => {
            addMessage('Abriendo un canal para que puedas escribirle tu mensaje... üì±üíå', 'oracle');
            
            setTimeout(() => {
                // Abrir WhatsApp con el n√∫mero especificado
                const phoneNumber = '+573175631608';
                const message = encodeURIComponent('Hola Sebas Nucita, tengo algo que decirte...');
                
                let whatsappUrl;
                
                if (isMobileDevice()) {
                    // Para m√≥viles, usar protocolo whatsapp://
                    whatsappUrl = `whatsapp://send?phone=${phoneNumber}&text=${message}`;
                    
                    // Intentar abrir WhatsApp App
                    window.location.href = whatsappUrl;
                    
                    // Fallback: despu√©s de un delay, abrir WhatsApp Web si la app no se abri√≥
                    setTimeout(() => {
                        const whatsappWebUrl = `https://wa.me/${phoneNumber}?text=${message}`;
                        window.open(whatsappWebUrl, '_blank');
                    }, 2000);
                    
                } else {
                    // Para desktop, usar WhatsApp Web
                    whatsappUrl = `https://wa.me/${phoneNumber}?text=${message}`;
                    window.open(whatsappUrl, '_blank');
                }
                
                addMessage('El portal del destino se ha abierto, mi princesa. ¬°No seas t√≠mida, no reprimas lo que tu coraz√≥n necesita expresar! El universo est√° esperando que rompas el silencio, que le digas lo que sientes. üíñ‚ú®', 'oracle');
                
                setTimeout(() => {
                    addMessage('¬øTe gustar√≠a hacer otra pregunta al or√°culo? üîÆ', 'oracle');
                    showNextQuestion('feelings');
                }, 2000);
            }, 1000);
        }, 1000);
    }, 500);
}

// Funci√≥n para abrir WhatsApp Web como alternativa
function openWhatsAppWeb() {
    addMessage('üåê Abriendo WhatsApp Web...', 'user');
    
    setTimeout(() => {
        addMessage('¬°Perfecto! El or√°culo te est√° conectando a trav√©s de WhatsApp Web... ‚ú®üí´', 'oracle');
        
        setTimeout(() => {
            addMessage('Abriendo el portal web para que puedas escribirle tu mensaje... üåêüíå', 'oracle');
            
            setTimeout(() => {
                // Abrir WhatsApp Web
                const phoneNumber = '+573175631608';
                const message = encodeURIComponent('Hola Sebas Nucita, tengo algo que decirte... üíï');
                const whatsappWebUrl = `https://wa.me/${phoneNumber}?text=${message}`;
                
                // Abrir en nueva pesta√±a
                window.open(whatsappWebUrl, '_blank');
                
                addMessage('WhatsApp Web se ha abierto. ¬°Escribe tu mensaje con amor! üíñ‚ú®', 'oracle');
                
                setTimeout(() => {
                    addMessage('¬øTe gustar√≠a hacer otra pregunta al or√°culo? üîÆ', 'oracle');
                    showNextQuestion('feelings');
                }, 2000);
            }, 1000);
        }, 1000);
    }, 500);
}

// Funci√≥n para configurar el indicador de audio clickeable
function setupAudioIndicator() {
    const audioIndicator = document.getElementById('audioIndicator');
    const audioTePienso = document.getElementById('audio-tePienso');
    
    if (audioIndicator && audioTePienso) {
        audioIndicator.addEventListener('click', function() {
            if (audioTePienso.paused) {
                // Si est√° pausado, reanudar
                audioTePienso.volume = 0.25; // Asegurar volumen al 25%
                audioTePienso.play()
                    .then(() => {
                        console.log('üéµ Canci√≥n tePienso.mp3 reanudada al 25% de volumen');
                        updateAudioIndicator(true);
                    })
                    .catch(error => {
                        console.error('Error al reanudar tePienso.mp3:', error);
                    });
            } else {
                // Si est√° reproduci√©ndose, pausar
                audioTePienso.pause();
                console.log('‚è∏Ô∏è Canci√≥n tePienso.mp3 pausada');
                updateAudioIndicator(false);
            }
        });
    }
}

// Funci√≥n para actualizar el indicador de audio
function updateAudioIndicator(isPlaying) {
    const musicNote = document.getElementById('musicNote');
    const audioText = document.getElementById('audioText');
    
    if (musicNote && audioText) {
        if (isPlaying) {
            musicNote.textContent = 'üéµ';
            musicNote.style.animation = 'musicFloat 1.5s ease-in-out infinite';
            audioText.textContent = 'M√∫sica del Or√°culo (Click para pausar)';
        } else {
            musicNote.textContent = '‚è∏Ô∏è';
            musicNote.style.animation = 'none';
            audioText.textContent = 'M√∫sica pausada (Click para reanudar)';
        }
    }
}

// Event listener para el bot√≥n or√°culo
document.addEventListener('DOMContentLoaded', function() {
    const btnOracula = document.getElementById('btnOracula');
    const oraculaModal = document.getElementById('oraculaModal');
    const audioTePienso = document.getElementById('audio-tePienso');
    
    // Configurar el audio del or√°culo
    setupOraculaAudio();
    
    // Configurar el indicador de audio clickeable
    setupAudioIndicator();
    
    if (btnOracula) {
        btnOracula.addEventListener('click', function() {
            // Inicializar el chat cuando se abre la modal
            initializeOracula();
            
            // Mostrar la modal
            const modal = new bootstrap.Modal(oraculaModal);
            modal.show();
            
            // Reproducir la canci√≥n tePienso.mp3 cuando se abre la modal
            if (audioTePienso) {
                audioTePienso.currentTime = 0; // Reiniciar desde el principio
                audioTePienso.volume = 0.25; // Asegurar volumen al 25%
                audioTePienso.play()
                    .then(() => {
                        console.log('üéµ Canci√≥n tePienso.mp3 iniciada al 25% de volumen');
                        updateAudioIndicator(true); // Actualizar indicador como reproduciendo
                    })
                    .catch(error => {
                        console.error('Error al reproducir tePienso.mp3:', error);
                    });
            }
        });
    }
    
    // Event listener para cuando se cierra la modal
    if (oraculaModal) {
        oraculaModal.addEventListener('hidden.bs.modal', function() {
            // Limpiar el chat cuando se cierra la modal
            const chatMessages = document.getElementById('chatMessages');
            const chatQuestions = document.getElementById('chatQuestions');
            if (chatMessages) chatMessages.innerHTML = '';
            if (chatQuestions) chatQuestions.innerHTML = '';
            
            // Detener y pausar la canci√≥n tePienso.mp3 cuando se cierra la modal
            if (audioTePienso) {
                audioTePienso.pause();
                audioTePienso.currentTime = 0;
                console.log('üîá Canci√≥n tePienso.mp3 detenida');
                updateAudioIndicator(false); // Actualizar indicador como pausado
            }
        });
    }
});
